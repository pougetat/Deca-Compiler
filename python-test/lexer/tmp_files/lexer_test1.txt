<{,TOKEN_OBRACE>
<-,TOKEN_OP_MINUS>
<(,TOKEN_OPARENT>
<new,TOKEN_NEW>
<A,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<),TOKEN_CPARENT>
<.,TOKEN_OP_DOT>
<a,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<1,TOKEN_LITERAL_INT>
<+,TOKEN_OP_PLUS>
<2,TOKEN_LITERAL_INT>
<+,TOKEN_OP_PLUS>
<(,TOKEN_OPARENT>
<new,TOKEN_NEW>
<A,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<),TOKEN_CPARENT>
<.,TOKEN_OP_DOT>
<b,TOKEN_IDENT>
<-,TOKEN_OP_MINUS>
<3,TOKEN_LITERAL_INT>
<-,TOKEN_OP_MINUS>
<2,TOKEN_LITERAL_INT>
<==,TOKEN_COMP_EQ>
<3,TOKEN_LITERAL_INT>
<!=,TOKEN_NEQ>
<b,TOKEN_IDENT>
<&&,TOKEN_AND>
<e,TOKEN_IDENT>
<&&,TOKEN_AND>
<f,TOKEN_IDENT>
<||,TOKEN_OR>
<e,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<a,TOKEN_IDENT>
<<=,TOKEN_COMP_LESSEQ>
<(,TOKEN_OPARENT>
<b,TOKEN_IDENT>
<==,TOKEN_COMP_EQ>
<b,TOKEN_IDENT>
<),TOKEN_CPARENT>
<>,TOKEN_COMP_MORE>
<1,TOKEN_LITERAL_INT>
<+,TOKEN_OP_PLUS>
<2,TOKEN_LITERAL_INT>
<<,TOKEN_COMP_LESS>
<r,TOKEN_IDENT>
<>=,TOKEN_COMP_MOREEQ>
<(,TOKEN_OPARENT>
<new,TOKEN_NEW>
<A,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<),TOKEN_CPARENT>
<.,TOKEN_OP_DOT>
<c,TOKEN_IDENT>
<.,TOKEN_OP_DOT>
<d,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<;,TOKEN_SEMICOLON>
<a,TOKEN_IDENT>
<!=,TOKEN_NEQ>
<b,TOKEN_IDENT>
<==,TOKEN_COMP_EQ>
<e,TOKEN_IDENT>
<*,TOKEN_OP_MULT>
<4,TOKEN_LITERAL_INT>
<;,TOKEN_SEMICOLON>
<a,TOKEN_IDENT>
<*,TOKEN_OP_MULT>
<(,TOKEN_OPARENT>
<-,TOKEN_OP_MINUS>
<5,TOKEN_LITERAL_INT>
<),TOKEN_CPARENT>
</,TOKEN_OP_DIV>
<4,TOKEN_LITERAL_INT>
<-,TOKEN_OP_MINUS>
<(,TOKEN_OPARENT>
<3,TOKEN_LITERAL_INT>
<+,TOKEN_OP_PLUS>
<45,TOKEN_LITERAL_INT>
<),TOKEN_CPARENT>
<&&,TOKEN_AND>
<e,TOKEN_IDENT>
<%,TOKEN_OP_MOD>
<34,TOKEN_LITERAL_INT>
<;,TOKEN_SEMICOLON>
<(,TOKEN_OPARENT>
<a,TOKEN_IDENT>
<+,TOKEN_OP_PLUS>
<4,TOKEN_LITERAL_INT>
<),TOKEN_CPARENT>
<*,TOKEN_OP_MULT>
<2,TOKEN_LITERAL_INT>
<;,TOKEN_SEMICOLON>
<a,TOKEN_IDENT>
<+,TOKEN_OP_PLUS>
<4,TOKEN_LITERAL_INT>
<*,TOKEN_OP_MULT>
<2,TOKEN_LITERAL_INT>
<;,TOKEN_SEMICOLON>
<a,TOKEN_IDENT>
<<=,TOKEN_COMP_LESSEQ>
<e,TOKEN_IDENT>
<>,TOKEN_COMP_MORE>
<3,TOKEN_LITERAL_INT>
<instanceof,TOKEN_INSTANCEOF>
<f,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<;,TOKEN_SEMICOLON>
<;,TOKEN_SEMICOLON>
<;,TOKEN_SEMICOLON>
<;,TOKEN_SEMICOLON>
<;,TOKEN_SEMICOLON>
<println,TOKEN_PRINTLN>
<(,TOKEN_OPARENT>
<(,TOKEN_OPARENT>
<new,TOKEN_NEW>
<A,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<),TOKEN_CPARENT>
<.,TOKEN_OP_DOT>
<b,TOKEN_IDENT>
<.,TOKEN_OP_DOT>
<f,TOKEN_IDENT>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<,,TOKEN_COMMA>
<2,TOKEN_LITERAL_INT>
<,,TOKEN_COMMA>
<3,TOKEN_LITERAL_INT>
<),TOKEN_CPARENT>
<;,TOKEN_SEMICOLON>
<while,TOKEN_WHILE>
<(,TOKEN_OPARENT>
<),TOKEN_CPARENT>
<{,TOKEN_OBRACE>
<},TOKEN_CBRACE>
<return,TOKEN_RETURN>
<;,TOKEN_SEMICOLON>
<if,TOKEN_IF>
<(,TOKEN_OPARENT>
<efewf,TOKEN_IDENT>
<),TOKEN_CPARENT>
<{,TOKEN_OBRACE>
<uhewfw,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<wfuegf,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<print,TOKEN_PRINT>
<(,TOKEN_OPARENT>
<hello,TOKEN_LITERAL_STRING>
<),TOKEN_CPARENT>
<;,TOKEN_SEMICOLON>
<},TOKEN_CBRACE>
<else,TOKEN_ELSE>
<{,TOKEN_OBRACE>
<killme,TOKEN_IDENT>
<;,TOKEN_SEMICOLON>
<},TOKEN_CBRACE>
<;,TOKEN_SEMICOLON>
<},TOKEN_CBRACE>
<EOF,TOKEN_EOF>
